<?xml version="1.0" encoding="utf-8" ?>
<?schema 0.1 ?>

<commandGroup name="datafactory integration-runtime">
    <help short="Manage data-factory integration runtime"/>

    <command name="create" version="2018-06-01" stage="Preview">
        <help short="Create an integration runtime"/>
        <argGroup name="">
            <arg var="$resourceGroup" type="@ResourceGroup" required="true"/>
            <arg var="$factoryName" options="--factory-name" type="string" required="true">
                <help short="The factory name."/>
                <format pattern="^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$" minLength="3" maxLength="63"/>
            </arg>
            <arg var="$integrationRuntimeName" options="--name -n" type="string" required="true">
                <help short="The integration runtime name."/>
                <format pattern="^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$" minLength="3" maxLength="63"/>
            </arg>
            <arg var="$ifMatch" options="--if-match" type="string">
                <help short="ETag of the integration runtime entity. Should only be specified for update, for which it should match existing entity or can be * for unconditional update."/>
            </arg>
            <arg var="$type" options="--type" type="string" required="true">
                <help short="The type of integration runtime."/>
                <enum>
                    <enum-item name="Managed">"Managed"</enum-item>
                    <enum-item name="SelfHosted">"SelfHosted"</enum-item>
                </enum>
            </arg>
            <arg var="$description" options="--description" type="string">
                <help short="Integration runtime description."/>
            </arg>
        </argGroup>

        <argGroup name="Managed">
            <arg var="$computeProperties" options="--compute" type="object">
                <help short="The compute resource properties for managed integration runtime."/>
                <arg var="$computeProperties.location" options="location" type="string">
                    <help short="The location for managed integration runtime. The supported regions could be found on https://docs.microsoft.com/en-us/azure/data-factory/data-factory-data-movement-activities"/>
                </arg>
                <arg var="$computeProperties.nodeSize" options="nodeSize" type="string">
                    <help short="The node size requirement to managed integration runtime"/>
                </arg>
                <arg var="$computeProperties.numberOfNodes" options="numberOfNodes" type="integer">
                    <help short="The required number of nodes for managed integration runtime."/>
                    <format min="1"/>
                </arg>
                <arg var="$computeProperties.maxParallelExecutionsPerNode" options="maxParallelExecutionsPerNode" type="integer">
                    <help short="Maximum parallel executions count per node for managed integration runtime."/>
                    <format min="1"/>
                </arg>
                <arg var="$computeProperties.dataFlowProperties" options="dataFlowProperties" type="object">
                    <help short="Data flow properties for managed integration runtime."/>
                    <arg var="$computeProperties.dataFlowProperties.computeType" options="computeType" type="string">
                        <help short="Compute type of the cluster which will execute data flow job."/>
                        <enum>
                            <enum-item name="General">"General"</enum-item>
                            <enum-item name="MemoryOptimized">"MemoryOptimized"</enum-item>
                            <enum-item name="ComputeOptimized">"ComputeOptimized"</enum-item>
                        </enum>
                    </arg>
                    <arg var="$computeProperties.dataFlowProperties.coreCount" options="coreCount" type="integer">
                        <help short="Core count of the cluster which will execute data flow job."/>
                        <enum>
                            <enum-item name="8">8</enum-item>
                            <enum-item name="16">16</enum-item>
                            <enum-item name="32">32</enum-item>
                            <enum-item name="48">48</enum-item>
                            <enum-item name="80">80</enum-item>
                            <enum-item name="144">144</enum-item>
                            <enum-item name="272">272</enum-item>
                        </enum>
                    </arg>
                    <arg var="$computeProperties.dataFlowProperties.timeToLive" options="timeToLive" type="integer">
                        <help short="Time to live (in minutes) setting of the cluster which will execute data flow job."/>
                        <format min="0"/>
                    </arg>
                </arg>
                <arg var="$computeProperties.vNetProperties" options="vNetProperties" type="object">
                    <help short="VNet properties for managed integration runtime."/>
                    <arg var="$computeProperties.vNetProperties.vNetId" options="vNetId" type="string">
                        <help short="The ID of the VNet that this integration runtime will join."/>
                    </arg>
                    <arg var="$computeProperties.vNetProperties.subnet" options="subnet" type="string">
                        <help short="The name of the subnet this integration runtime will join."/>
                    </arg>
                    <arg var="$computeProperties.vNetProperties.publicIPs" options="publicIPs" type="array<string>" nargs="*">
                        <help short="Resource IDs of the public IP addresses that this integration runtime will use."/>
                    </arg>
                </arg>
            </arg>
            <arg var="$ssisProperties" options="--ssis" type="object">
                <help short="SSIS properties for managed integration runtime."/>
                <arg var="$ssisProperties.catalogInfo" options="catalogInfo" type="object">
                    <help short="Catalog information for managed dedicated integration runtime."/>
                    <arg var="$ssisProperties.catalogInfo.catalogServerEndpoint" options="serverEndpoint" type="string">
                        <help short="The catalog database server URL."/>
                    </arg>
                    <arg var="$ssisProperties.catalogInfo.catalogAdminUserName" options="adminUserName" type="string">
                        <help short="The administrator user name of catalog database."/>
                        <format minLength="1" maxLength="128"/>
                    </arg>
                    <arg var="$ssisProperties.catalogInfo.catalogAdminPassword" options="adminPassword" type="object">
                        <help short="The password of the administrator user account of the catalog database."/>
                        <arg var="$ssisProperties.catalogInfo.catalogAdminPassword.value" options="value" type="string" required="true">
                            <help short="Value of secure string."/>
                        </arg>
                    </arg>
                    <arg var="$ssisProperties.catalogInfo.catalogPricingTier" options="catalogPricingTier" type="string">
                        <help short="The pricing tier for the catalog database. The valid values could be found in https://azure.microsoft.com/en-us/pricing/details/sql-database/"/>
                        <enum>
                            <enum-item name="Basic">"Basic"</enum-item>
                            <enum-item name="Standard">"Standard"</enum-item>
                            <enum-item name="Premium">"Premium"</enum-item>
                            <enum-item name="PremiumRS">"PremiumRS"</enum-item>
                        </enum>
                    </arg>
                    <arg var="$ssisProperties.catalogInfo.dualStandbyPairName" options="dualStandbyPairName" type="string">
                        <help short="The dual standby pair name of Azure-SSIS Integration Runtimes to support SSISDB failover."/>
                    </arg>
                </arg>
                <arg var="$ssisProperties.licenseType" options="licenseType" type="string">
                    <help short=""/>
                    <enum>
                        <enum-item name="BasePrice">"BasePrice"</enum-item>
                        <enum-item name="LicenseIncluded">"LicenseIncluded"</enum-item>
                    </enum>
                </arg>
                <arg var="$ssisProperties.customSetupScriptProperties" options="customSetupScript" type="object">
                    <help short="Custom setup script properties for a managed dedicated integration runtime."/>
                    <arg var="$ssisProperties.customSetupScriptProperties.blobContainerUri" options="blobContainerUri" type="string">
                        <help short=""/>
                    </arg>
                    <arg var="$ssisProperties.customSetupScriptProperties.sasToken" options="sasToken" type="object">
                        <help short=""/>
                        <arg var="$ssisProperties.customSetupScriptProperties.sasToken.value" options="value" type="string">
                            <help short=""/>
                        </arg>
                    </arg>
                </arg>
                <arg var="$ssisProperties.dataProxyProperties" options="dataProxy" type="object">
                    <help short=""/>
                    <arg var="$ssisProperties.dataProxyProperties.connectVia" options="connectVia" type="object">
                        <help short=""/>
                        <arg var="$ssisProperties.dataProxyProperties.connectVia.type" options="type" type="string">
                            <help short=""/>
                            <enum>
                                <enum-item name="IntegrationRuntimeReference">"IntegrationRuntimeReference"</enum-item>
                                <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                <enum-item name="CredentialReference">"CredentialReference"</enum-item>
                            </enum>
                        </arg>
                        <arg var="$ssisProperties.dataProxyProperties.connectVia.referenceName" options="referenceName" type="string">
                            <help short=""/>
                        </arg>
                    </arg>
                    <arg var="$ssisProperties.dataProxyProperties.stagingLinkedService" options="stagingLinkedService" type="object">
                        <help short=""/>
                        <arg var="$ssisProperties.dataProxyProperties.stagingLinkedService.type" options="type" type="string">
                            <help short=""/>
                            <enum>
                                <enum-item name="IntegrationRuntimeReference">"IntegrationRuntimeReference"</enum-item>
                                <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                <enum-item name="CredentialReference">"CredentialReference"</enum-item>
                            </enum>
                        </arg>
                        <arg var="$ssisProperties.dataProxyProperties.stagingLinkedService.referenceName" options="referenceName" type="string">
                            <help short=""/>
                        </arg>
                    </arg>
                    <arg var="$ssisProperties.dataProxyProperties.path" options="path" type="string">
                        <help short=""/>
                    </arg>
                </arg>
                <arg var="$ssisProperties.edition" options="edition" type="string">
                    <help short=""/>
                    <enum>
                        <enum-item name="Standard">"Standard"</enum-item>
                        <enum-item name="Enterprise">"Enterprise"</enum-item>
                    </enum>
                </arg>
                <arg var="$ssisProperties.expressCustomSetupProperties" options="expressCustomSetup" type="array<object>" nargs="*">
                    <help short=""/>
                    <array>
                        <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup" options="cmdkeySetup" type="object">
                            <help short=""/>
                            <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.targetName" options="targetName" type="object">
                                <help short="The server name of data source access."/>
                            </arg>
                            <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.userName" options="userName" type="object">
                                <help short="The user name of data source access."/>
                            </arg>
                            <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password" options="password" type="object">
                                <help short=""/>
                                <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.SecureString" options="secureString" type="object">
                                    <help short=""/>
                                    <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.SecureString.value" options="value" type="string" required="true">
                                        <help short=""/>
                                    </arg>
                                </arg>
                                <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret" options="azureKeyVaultSecret" type="object">
                                    <help short=""/>
                                    <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.store" options="store" type="object">
                                        <help short=""/>
                                        <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.store.type" options="type" type="string" required="true">
                                            <help short=""/>
                                            <enum>
                                                <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                            </enum>
                                        </arg>
                                        <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.store.referenceName" options="referenceName" type="string" required="true">
                                            <help short=""/>
                                        </arg>
                                        <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.store.parameters" options="parameters" type="object">
                                            <help short=""/>
                                        </arg>
                                    </arg>
                                    <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.secretName" options="secretName" type="object" required="true">
                                        <help short=""/>
                                    </arg>
                                    <arg var="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.secretVersion" options="secretVersion" type="object">
                                        <help short=""/>
                                    </arg>
                                </arg>
                            </arg>
                        </arg>
                        <arg var="$ssisProperties.expressCustomSetupProperties[].EnvironmentVariableSetup" options="environmentVariableSetup" type="object">
                            <help short=""/>
                            <arg var="$ssisProperties.expressCustomSetupProperties[].EnvironmentVariableSetup.variableName" options="variableName" type="string">
                                <help short=""/>
                            </arg>
                            <arg var="$ssisProperties.expressCustomSetupProperties[].EnvironmentVariableSetup.variableValue" options="variableValue" type="string">
                                <help short=""/>
                            </arg>
                        </arg>
                        <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup" options="componentSetup" type="object">
                            <help short=""/>
                            <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.componentName" options="componentName" type="string" required="true">
                                <help short=""/>
                            </arg>
                            <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey" options="licenseKey" type="object">
                                <help short=""/>
                                <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.SecureString" options="secureString" type="object">
                                    <help short=""/>
                                    <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.SecureString.value" options="value" required="true" type="string">
                                        <help short=""/>
                                    </arg>
                                </arg>
                                <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret" options="azureKeyVaultSecret" type="object">
                                    <help short=""/>
                                    <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.store" options="store" type="object" required="true">
                                        <help short=""/>
                                        <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.store.type" options="type" type="string" required="true">
                                            <enum>
                                                <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                            </enum>
                                        </arg>
                                        <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.store.referenceName" options="referenceName" type="string" required="true">
                                            <help short=""/>
                                        </arg>
                                        <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.store.parameters" options="parameters" type="object">
                                            <help short=""/>
                                        </arg>
                                    </arg>
                                    <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.secretName" options="secretName" type="object" required="true">
                                        <help short=""/>
                                    </arg>
                                    <arg var="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.secretVersion" options="secretVersion" type="object">
                                        <help short=""/>
                                    </arg>
                                </arg>
                            </arg>

                        </arg>
                        <arg var="$ssisProperties.expressCustomSetupProperties[].AzPowerShellSetup" options="azPowerShellSetup" type="object">
                            <help short=""/>
                            <arg var="$ssisProperties.expressCustomSetupProperties[].AzPowerShellSetup.version" options="version" type="string">
                                <help short=""/>
                            </arg>
                        </arg>
                    </array>
                </arg>
                <arg var="$ssisProperties.packageStores" options="packageStores" type="array<object>" nargs="*">
                    <help short=""/>
                    <array>
                        <arg var="$ssisProperties.packageStores[].name" options="name" type="string" required="true">
                            <help short=""/>
                        </arg>
                        <arg var="$ssisProperties.packageStores[].packageStoreLinkedService" options="packageStoreLinkedService" type="object" required="true">
                            <help short=""/>
                            <arg var="$ssisProperties.packageStores[].packageStoreLinkedService.type" options="type" type="string">
                                <enum>
                                    <enum-item name="IntegrationRuntimeReference">"IntegrationRuntimeReference"</enum-item>
                                    <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                    <enum-item name="CredentialReference">"CredentialReference"</enum-item>
                                </enum>
                            </arg>
                            <arg var="$ssisProperties.packageStores[].packageStoreLinkedService.referenceName" options="referenceName" type="string">
                                <help short=""/>
                            </arg>
                        </arg>
                    </array>
                </arg>
                <arg var="$ssisProperties.managedCredential" options="managedCredential" type="object">
                    <help short=""/>
                    <arg var="$ssisProperties.managedCredential.type" options="type" type="string">
                        <enum>
                            <enum-item name="IntegrationRuntimeReference">"IntegrationRuntimeReference"</enum-item>
                            <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                            <enum-item name="CredentialReference">"CredentialReference"</enum-item>
                        </enum>
                    </arg>
                    <arg var="$ssisProperties.managedCredential.referenceName" options="referenceName" type="string">
                        <help short=""/>
                    </arg>
                </arg>
            </arg>
            <arg var="$managedVirtualNetwork" options="--managed-virtual-network" type="object">
                <help short=""/>
                <arg var="$managedVirtualNetwork.type" options="type" type="string" required="true">
                    <help short=""/>
                    <enum>
                        <enum-item name="ManagedVirtualNetworkReference">"ManagedVirtualNetworkReference"</enum-item>
                    </enum>
                </arg>
                <arg var="$managedVirtualNetwork.referenceName" options="referenceName" type="string" required="true">
                    <help short=""/>
                </arg>
            </arg>
        </argGroup>

        <argGroup name="SelfHosted">
            <arg var="$linkedInfo" options="--linked-info" type="object">
                <help short="The base definition of a linked integration runtime."/>
                <arg var="$linkedInfo.authorizationType" options="authorization-type" type="string" required="true">
                    <help short="The authorization type for integration runtime sharing."/>
                </arg>
            </arg>
        </argGroup>

        <argGroup name="Global">
            <arg var="$subscription" type="@Subscription" required="true"/>
        </argGroup>

        <operation>
            <http path="/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}/integrationRuntimes/{integrationRuntimeName}">
                <request method="put">
                    <path>
                        <param name="subscriptionId" arg="$subscription"/>
                        <param name="resourceGroupName" arg="$resourceGroup"/>
                        <param name="factoryName" arg="$factoryName"/>
                        <param name="integrationRuntimeName" arg="$integrationRuntimeName"/>
                    </path>
                    <query>
                        <const name="api-version" value="2018-06-01"/>
                    </query>
                    <header>
                        <param name="If-Match" value="$ifMatch"/>
                    </header>
                    <body>
                        <json type="object">
                            <prop name="properties" type="object" required="true">
                                <prop name="type" type="string" required="true" arg="$type">
                                    <enum>
                                        <enum-item name="Managed">"Managed"</enum-item>
                                        <enum-item name="SelfHosted">"SelfHosted"</enum-item>
                                    </enum>
                                </prop>
                                <prop name="description" type="string" arg="$description"/>
                                <discriminator arg="$type" value="Managed">
                                    <prop name="typeProperties" type="object" required="true">
                                        <prop name="computeProperties" type="object" arg="$computeProperties">
                                            <prop name="location" type="string"/>
                                            <prop name="nodeSize" type="string"/>
                                            <prop name="numberOfNodes" type="integer"/>
                                            <prop name="maxParallelExecutionsPerNode" type="integer"/>
                                            <prop name="dataFlowProperties" type="object">
                                                <prop name="computeType" type="string">
                                                    <enum>
                                                        <enum-item name="General">"General"</enum-item>
                                                        <enum-item name="MemoryOptimized">"MemoryOptimized"</enum-item>
                                                        <enum-item name="ComputeOptimized">"ComputeOptimized"</enum-item>
                                                    </enum>
                                                </prop>
                                                <prop name="coreCount" type="integer"/>
                                                <prop name="timeToLive" type="integer"/>
                                                <additionalProp type="object"/>
                                            </prop>
                                            <prop name="vNetProperties">
                                                <prop name="vNetId" type="string"/>
                                                <prop name="subnet" type="string"/>
                                                <prop name="publicIPs" type="array<string>"/>
                                                <additionalProp type="object"/>
                                            </prop>
                                            <additionalProp type="object"/>
                                        </prop>
                                        <prop name="ssisProperties" type="object" arg="$ssisProperties">
                                            <prop name="catalogInfo" type="object" arg="$ssisProperties.catalogInfo">
                                                <prop name="catalogServerEndpoint" type="string" arg="$ssisProperties.catalogInfo.catalogServerEndpoint"/>
                                                <prop name="catalogAdminUserName" type="string" arg="$ssisProperties.catalogInfo.catalogAdminUserName"/>
                                                <prop name="catalogAdminPassword" type="object" arg="$ssisProperties.catalogInfo.catalogAdminPassword">
                                                    <prop name="type" type="string" required="true" value="SecureString"/>
                                                    <prop name="value" type="string" required="true" arg="$ssisProperties.catalogInfo.catalogAdminPassword.value"/>
                                                </prop>
                                                <prop name="catalogPricingTier" type="string" arg="$ssisProperties.catalogInfo.catalogPricingTier">
                                                    <enum>
                                                        <enum-item name="Basic">"Basic"</enum-item>
                                                        <enum-item name="Standard">"Standard"</enum-item>
                                                        <enum-item name="Premium">"Premium"</enum-item>
                                                        <enum-item name="PremiumRS">"PremiumRS"</enum-item>
                                                    </enum>
                                                </prop>
                                                <prop name="dualStandbyPairName" type="string" arg="$ssisProperties.catalogInfo.dualStandbyPairName"/>
                                                <additionalProp type="object"/>
                                            </prop>
                                            <prop name="licenseType" type="string" arg="$ssisProperties.licenseType">
                                                <enum>
                                                    <enum-item name="BasePrice">"BasePrice"</enum-item>
                                                    <enum-item name="LicenseIncluded">"LicenseIncluded"</enum-item>
                                                </enum>
                                            </prop>
                                            <prop name="customSetupScriptProperties" type="object" arg="$ssisProperties.customSetupScriptProperties">
                                                <prop name="blobContainerUri" type="string" arg="$ssisProperties.customSetupScriptProperties.blobContainerUri"/>
                                                <prop name="sasToken" type="object" arg="$ssisProperties.customSetupScriptProperties.sasToken">
                                                    <prop name="type" type="string" required="true" value="SecureString"/>
                                                    <prop name="value" type="string" required="true" arg="$ssisProperties.customSetupScriptProperties.sasToken.value"/>
                                                </prop>
                                            </prop>
                                            <prop name="dataProxyProperties" type="object" arg="$ssisProperties.dataProxyProperties">
                                                <prop name="connectVia" type="object" arg="$ssisProperties.dataProxyProperties.connectVia">
                                                    <prop name="type" type="string" arg="$ssisProperties.dataProxyProperties.connectVia.type">
                                                        <enum>
                                                            <enum-item name="IntegrationRuntimeReference">"IntegrationRuntimeReference"</enum-item>
                                                            <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                                            <enum-item name="CredentialReference">"CredentialReference"</enum-item>
                                                        </enum>
                                                    </prop>
                                                    <prop name="referenceName" type="string" arg="$ssisProperties.dataProxyProperties.connectVia.referenceName"/>
                                                </prop>
                                                <prop name="stagingLinkedService" type="object" arg="$ssisProperties.dataProxyProperties.stagingLinkedService">
                                                    <prop name="type" type="string" arg="$ssisProperties.dataProxyProperties.stagingLinkedService.type">
                                                        <enum>
                                                            <enum-item name="IntegrationRuntimeReference">"IntegrationRuntimeReference"</enum-item>
                                                            <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                                            <enum-item name="CredentialReference">"CredentialReference"</enum-item>
                                                        </enum>
                                                    </prop>
                                                    <prop name="referenceName" type="string" arg="$ssisProperties.dataProxyProperties.stagingLinkedService.referenceName"/>
                                                </prop>
                                                <prop name="path" type="string" arg="$ssisProperties.dataProxyProperties.path"/>
                                            </prop>
                                            <prop name="edition" type="string" arg="$ssisProperties.edition">
                                                <enum>
                                                    <enum-item name="Standard">"Standard"</enum-item>
                                                    <enum-item name="Enterprise">"Enterprise"</enum-item>
                                                </enum>
                                            </prop>
                                            <prop name="expressCustomSetupProperties" type="array<object>" arg="$ssisProperties.expressCustomSetupProperties">
                                                <array>
                                                    <discriminator arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup">
                                                        <prop name="type" type="string" required="true" value="CmdkeySetup"/>
                                                        <prop name="typeProperties" type="object" required="true">
                                                            <prop name="targetName" type="object" required="true" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.targetName"/>
                                                            <prop name="userName" type="object" required="true" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.userName"/>
                                                            <prop name="password" type="object" required="true" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password">
                                                                <discriminator arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.SecureString">
                                                                    <prop name="type" type="string" required="true" value="SecureString"/>
                                                                    <prop name="value" type="string" required="true" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.SecureString.value"/>
                                                                </discriminator>
                                                                <discriminator arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret">
                                                                    <prop name="type" type="string" required="true" value="AzureKeyVaultSecret"/>
                                                                    <prop name="store" type="object" required="true" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.store">
                                                                        <prop name="type" type="string" required="true" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.store.type">
                                                                            <enum value="string">
                                                                                <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                                                            </enum>
                                                                        </prop>
                                                                        <prop name="referenceName" type="string" required="true" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.store.referenceName"/>
                                                                        <prop name="parameters" type="object" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.store.parameters">
                                                                            <additionalProp type="object"/>
                                                                        </prop>
                                                                    </prop>
                                                                    <!--   TODO: distinguish with `dict` type and `any` type for object  -->
                                                                    <prop name="secretName" type="object" required="true" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.secretName"/>
                                                                    <prop name="secretVersion" type="object" arg="$ssisProperties.expressCustomSetupProperties[].CmdkeySetup.password.AzureKeyVaultSecret.secretVersion"/>
                                                                </discriminator>
                                                            </prop>
                                                        </prop>
                                                    </discriminator>
                                                    <discriminator arg="$ssisProperties.expressCustomSetupProperties[].EnvironmentVariableSetup">
                                                        <prop name="type" type="string" required="true" value="EnvironmentVariableSetup"/>
                                                        <prop name="typeProperties" type="object" required="true">
                                                            <prop name="variableName" type="string" required="true"/>
                                                            <prop name="variableValue" type="string" required="true"/>
                                                        </prop>
                                                    </discriminator>
                                                    <discriminator arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup">
                                                        <prop name="type" type="string" required="true" value="ComponentSetup"/>
                                                        <prop name="typeProperties" type="object" required="true">
                                                            <prop name="componentName" type="string" required="true" arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.componentName"/>
                                                            <prop name="licenseKey" type="object" arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey">
                                                                <discriminator arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.SecureString">
                                                                    <prop name="type" type="string" required="true" value="SecureString"/>
                                                                    <prop name="value" type="string" required="true" arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.SecureString.value"/>
                                                                </discriminator>
                                                                <discriminator arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret">
                                                                    <prop name="type" type="string" required="true" value="AzureKeyVaultSecret"/>
                                                                    <prop name="store" type="object" required="true" arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.store">
                                                                        <prop name="type" type="string" required="true" arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.store.type">
                                                                            <enum value="string">
                                                                                <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                                                            </enum>
                                                                        </prop>
                                                                        <prop name="referenceName" type="string" required="true" arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.store.referenceName"/>
                                                                        <prop name="parameters" type="object" arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.store.parameters">
                                                                            <additionalProp type="object"/>
                                                                        </prop>
                                                                    </prop>
                                                                    <prop name="secretName" type="object" required="true" arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.secretName"/>
                                                                    <prop name="secretVersion" type="object" arg="$ssisProperties.expressCustomSetupProperties[].ComponentSetup.licenseKey.AzureKeyVaultSecret.secretVersion"/>
                                                                </discriminator>
                                                            </prop>
                                                        </prop>
                                                    </discriminator>
                                                    <discriminator arg="$ssisProperties.expressCustomSetupProperties[].AzPowerShellSetup">
                                                        <prop name="type" type="string" required="true" value="AzPowerShellSetup"/>
                                                        <prop name="typeProperties" type="object" required="true">
                                                            <prop name="version" type="string" required="true" arg="$ssisProperties.expressCustomSetupProperties[].AzPowerShellSetup.version"/>
                                                        </prop>
                                                    </discriminator>
                                                </array>
                                            </prop>
                                            <prop name="packageStores" type="array<object>" arg="$ssisProperties.packageStores">
                                                <array>
                                                    <prop name="name" type="string" required="true" arg="$ssisProperties.packageStores[].name"/>
                                                    <prop name="packageStoreLinkedService" type="object" required="true" arg="$ssisProperties.packageStores[].packageStoreLinkedService">
                                                        <prop name="type" type="string" arg="$ssisProperties.packageStores[].packageStoreLinkedService.type">
                                                            <enum>
                                                                <enum-item name="IntegrationRuntimeReference">"IntegrationRuntimeReference"</enum-item>
                                                                <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                                                <enum-item name="CredentialReference">"CredentialReference"</enum-item>
                                                            </enum>
                                                        </prop>
                                                        <prop name="referenceName" type="string" arg="$ssisProperties.packageStores[].packageStoreLinkedService.referenceName"/>
                                                    </prop>
                                                </array>
                                            </prop>
                                            <prop name="managedCredential" type="object" arg="$ssisProperties.managedCredential">
                                                <prop name="type" type="string" arg="$ssisProperties.managedCredential.type">
                                                    <enum>
                                                        <enum-item name="IntegrationRuntimeReference">"IntegrationRuntimeReference"</enum-item>
                                                        <enum-item name="LinkedServiceReference">"LinkedServiceReference"</enum-item>
                                                        <enum-item name="CredentialReference">"CredentialReference"</enum-item>
                                                    </enum>
                                                </prop>
                                                <prop name="referenceName" type="string" arg="$ssisProperties.managedCredential.referenceName"/>
                                            </prop>
                                            <additionalProp type="object"/>
                                        </prop>
                                    </prop>
                                    <prop name="managedVirtualNetwork" type="object" arg="$managedVirtualNetwork">
                                        <prop name="type" type="string" required="true" arg="$managedVirtualNetwork.type">
                                            <enum-item name="ManagedVirtualNetworkReference">"ManagedVirtualNetworkReference"</enum-item>
                                        </prop>
                                        <prop name="referenceName" type="string" required="true" arg="$managedVirtualNetwork.referenceName"/>
                                    </prop>
                                    <additionalProp type="object"/>
                                </discriminator>
                                <discriminator arg="$type" value="SelfHosted">
                                    <prop name="typeProperties" type="object" required="true">
                                        <prop name="linkedInfo" type="object" arg="$linkedInfo">
                                            <prop name="authorizationType" type="string" required="true" arg="$linkedInfo.authorizationType"/>
                                        </prop>
                                    </prop>
                                    <additionalProp type="object"/>
                                </discriminator>
                            </prop>
                        </json>
                    </body>
                </request>
            </http>
        </operation>
    </command>

    <command name="update" version="2018-06-01" stage="Preview">
        <help short="Update an integration runtime"/>


    </command>

</commandGroup>