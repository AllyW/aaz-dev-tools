{"version":3,"sources":["components/ModuleAccordion.js","App.js","reportWebVitals.js","index.js"],"names":["CustomAccordion","props","getVersion","versionList","map","version","getResourceId","resourceIdList","resourceId","id","Object","keys","Accordion","Item","eventKey","Header","Body","getModule","spec","moduleName","state","mgmtPlaneSpecs","dataPlaneSpecs","hidden","this","PureComponent","App","listAllSpecs","axios","get","then","res","setState","allMgmtPlaneSpecs","data","allDataPlaneSpecs","catch","err","console","log","handleSearch","found","moduleFound","handleInput","e","target","value","searchBar","placeholder","onChange","onClick","className","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc2b1e53.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport {Accordion} from \"react-bootstrap\";\r\nimport { ListGroup, ListGroupItem} from \"reactstrap\";\r\n\r\nexport default class CustomAccordion extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            mgmtPlaneSpecs: this.props.mgmtPlaneSpecs,\r\n            dataPlaneSpecs: this.props.dataPlaneSpecs,\r\n            hidden: this.props.hidden\r\n        };\r\n      }\r\n\r\n    getVersion = versionList => {\r\n        return versionList.map(version=>{\r\n        return <ListGroupItem>{version}</ListGroupItem>\r\n        })\r\n    }\r\n\r\n    getResourceId = resourceIdList => {\r\n        return resourceIdList.map((resourceId) =>{\r\n            let id = Object.keys(resourceId)[0]\r\n            return <Accordion>\r\n                <Accordion.Item eventKey={id}>\r\n                    <Accordion.Header>{id}</Accordion.Header>\r\n                    <Accordion.Body>\r\n                    <ListGroup>{this.getVersion(resourceId[id])}</ListGroup>\r\n                    </Accordion.Body>\r\n                </Accordion.Item>\r\n                </Accordion>\r\n            }\r\n        )\r\n    }\r\n\r\n    getModule = spec =>{\r\n        return Object.keys(spec).map((moduleName) =>{\r\n            return <Accordion>\r\n                    <Accordion.Item eventKey={moduleName}>\r\n                    <Accordion.Header>{moduleName}</Accordion.Header>\r\n                    <Accordion.Body>\r\n                        {this.getResourceId(spec[moduleName])}\r\n                    </Accordion.Body>\r\n                    </Accordion.Item>\r\n            </Accordion>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <Accordion hidden={this.props.hidden}>\r\n                {this.props.mgmtPlaneSpecs && \r\n                <Accordion.Item eventKey=\"0\">\r\n                  <Accordion.Header>Management Plane</Accordion.Header>\r\n                  <Accordion.Body>\r\n                    {this.getModule(this.props.mgmtPlaneSpecs)}\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n                }\r\n                {this.props.dataPlaneSpecs &&\r\n                <Accordion.Item eventKey=\"1\">\r\n                  <Accordion.Header>Data Plane</Accordion.Header>\r\n                  <Accordion.Body>\r\n                    {this.getModule(this.props.dataPlaneSpecs)}\r\n                  </Accordion.Body>\r\n                </Accordion.Item>\r\n                }\r\n              </Accordion>\r\n    }\r\n} ","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { InputGroup, Input, Button} from \"reactstrap\";\r\nimport ModuleAccordion from \"./components/ModuleAccordion\"\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mgmtPlaneSpecs: [],\r\n      dataPlaneSpecs: [],\r\n      allMgmtPlaneSpecs: [],\r\n      allDataPlaneSpecs: [],\r\n      moduleName: \"\",\r\n      moduleFound: false\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.listAllSpecs();\r\n  }\r\n\r\n  listAllSpecs = () => {\r\n    axios\r\n      .get(\"/specifications\")\r\n      .then((res) => {\r\n        this.setState({ allMgmtPlaneSpecs: res.data[\"mgmt\"], \r\n                        allDataPlaneSpecs: res.data[\"data\"],\r\n                        mgmtPlaneSpecs: res.data[\"mgmt\"],\r\n                        dataPlaneSpecs: res.data[\"data\"],\r\n                      })\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleSearch = () => {\r\n    let found = false\r\n    if (this.state.moduleName in this.state.allMgmtPlaneSpecs){\r\n      let mgmtPlaneSpecs = {}\r\n      mgmtPlaneSpecs[this.state.moduleName] = this.state.allMgmtPlaneSpecs[this.state.moduleName]\r\n      this.setState({ mgmtPlaneSpecs: mgmtPlaneSpecs})\r\n      found = true\r\n    } else {\r\n      this.setState({ mgmtPlaneSpecs: null})\r\n    }\r\n    if (this.state.moduleName in this.state.allDataPlaneSpecs){\r\n      let dataPlaneSpecs = {}\r\n      dataPlaneSpecs[this.state.moduleName] = this.state.allDataPlaneSpecs[this.state.moduleName]\r\n      this.setState({ dataPlaneSpecs: dataPlaneSpecs})\r\n      found = true\r\n    } else {\r\n      this.setState({ dataPlaneSpecs: null})\r\n    }\r\n    if (!found){\r\n      this.setState({ mgmtPlaneSpecs: null, dataPlaneSpecs: null, moduleFound: false})\r\n    } else {\r\n      this.setState({moduleFound: true})\r\n    }\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({moduleName: e.target.value})\r\n  }\r\n\r\n  searchBar = () => {\r\n    return <InputGroup>\r\n            <Input placeholder=\"Module Name\" value={this.state.moduleName} onChange={this.handleInput}/>\r\n            <Button onClick={this.handleSearch}>Search</Button>\r\n          </InputGroup>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"container\">\r\n        <this.searchBar/>\r\n        <br/>\r\n        <ModuleAccordion hidden={!this.state.moduleFound} mgmtPlaneSpecs={this.state.mgmtPlaneSpecs} dataPlaneSpecs={this.state.dataPlaneSpecs}></ModuleAccordion>\r\n        <ModuleAccordion hidden={this.state.moduleFound} mgmtPlaneSpecs={this.state.allMgmtPlaneSpecs} dataPlaneSpecs={this.state.allDataPlaneSpecs}></ModuleAccordion>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}